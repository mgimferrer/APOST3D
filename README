------------------------------------------------------------------------------
                
										
		   Program APOST-3D, Version 4.0                           
                  --------------------------------                          
                                                                             
    Real-space and Hilbert-space tools for wave function analysis            
                                                                             
------------------------------------------------------------------------------


Program compilation:
-------------------
This version makes use of the libxc library. The necessary steps are as follows:

* untar apost3d.tgz and set variable PROG in Makefile to the destination folder
* Download and install libxc.(see e.g. GitHub or tddft.org/programs/libxc )
* Modify apost's Makefile to set the variable LIBXCDIR to point to where libxc
  has been installed. 
* Copy the F90 interfaces provided by libxc (libxc_funcs.f90 and libxc.f90 files on 
  src folder) on $LIBXCDIR 
* cd $PROG ; make

The main executable is on $PROG/apost3d. Additional utilities are also included
in $PROG/utils folder. Note that 'make clean' cleans apost3d's objects, but not
those of the F90 interfaces and their module files. 

Running APOST3D :
-----------------
At present the program can only run on a single-processor.
Memory requirements for ENPART calculations may be very large (up to 60Gb), and 
increase significantly with the number of atoms of the system. Moreover, methods 
including exact-exchange are very time consuming. 

We assume the code is located in the path given by $APOST variable.
The main code ($APOST/apost3d) needs two input files: a Gaussian's Fchk file 
(file.fchk) and an additional input file (file.inp) with the necessary options.
The main code is executed simply as
 
  $APOST/apost3d file >> file.out

The program's output goes to the standard output (on screen). It is usually 
recomended to redirect the output to an output file (file.out).

The file.inp input file is structured in different sections. Keywords are 
casesensitive. Order of input sections, and keywords within each section is 
irrelevant. Keywords can be introduced in several lines. All sections begin with 
"# SECTIONNAME" and end with a "#" line.

The keywords and options of the different sections are described as follows.

********************************************
  Input file options for section # METODE
********************************************

An atomic definition among the following must specified:

MULLI     ! Mulliken-type analysis
LOWDIN    ! Classical analysis on Lowdin basis (not strictily rotational  
          ! invariant)
LOWDIN-DAVIDSON  ! Davidson approach with strict rotational invariance
BECKE-RHO ! Original Becke's with atomic size adjusted according to QTAIM's 
          ! bcps.
NEWBEC    ! Becke's atoms using an alternative function to account for cell size 
TFVC      ! Equivalent to BECKE-RHO NEWBEC STIFFNESS=4. *Recommended method*.
HIRSH     ! Hirshfeld method. (It requires additional atomic densities)
HIRSH-IT  ! Improved Hirshfeld. (It requires additional atomic densities)
QTAIM     ! Unnacurate grid based implemenation. Not for production purposes
          ! (requieres additional # QTAIM section for more options

Default is original Becke's atoms with stiffnes parameter k=3
The latter can be modified with the option
STIFFNESS=n ! where n is an integer number

A method of WF analysis among the following can be specified.
By default bond orders, population and valences are computed.
The program selects the 1st density matrix (P-matrix) found in the FChk. When
more than one are printed, an alternqtive P-matrix can be selected with option
DENS=n ! 
where n (integer) is the n-th P-matrix on the FChk. Default DENS=1


POLAR  ! 3D-space based partitioning of the dipole moment 

ENPART ! 3D-space based energy partitioning (requieres additional # ENPART 
       ! section for more options)

EFFAO  ! Effective atomic orbitals 
UEFFAO ! Spin-resolved effective atomic orbitals (for correlated methods 
       ! additional input files are required, namely DM1)
EFF_THRESH=n ! where n (integer) is the threshold of occupation (in 
	     ! milielectrons) for the print out of the eff-AOs. Default is 1.
CUBE   ! Effective atomic orbital plots (requieres additional # CUBE  section 
       ! for more options)

SPIN   ! Local spin analysis (for correlated methods additional input files are 
       ! required, namely DM1 and DM2)

EOS    ! Effective oxidation states analysis (for correlated methods 
       ! additional input files are required, namely DM1)
EOS_THRESH=n ! where n (real) is the threshold of occupation (in 
	     ! milielectrons) to consider degeneracy in the EOS assignation. 
	     ! Default is 0.0025.

Additional options:

OPOP    ! Do overlap population matrix
LAPLACIAN ! Do atomic integration of the Laplacian of the density (divided by 4 
          ! Pi).
DOATOMS ! Used for ENPART and EFFAO. Do analysis only for a subset of atoms
        ! (requieres additional # ATOMS section for more options)
DOFRAGS ! Use fragments for ENPART or EOS analysis. Other analyses are 
        ! additionally printed per group (requieres additional # FRAGMENTS
	! section for more options)
DOINT   ! Generate atomic files that mimick PROAIM's .int files. They can be 
        ! used as input files for Eduard Matito's ESI code.
DM = n  ! where n=1 or 2 (integer) indicates that additional files with 
        ! the DM1 (n=1) and the DM2 (n=2) will be provided for the calculation.
	! (requieres additional # DM section for more options).
FINEGRID ! Use a finer integration grid for either ENPART or POLAR calculations
FULLPRECISION ! Printout with full machine accuracy. Output looks uglier 

********************
 # ATOMS section
********************
On the first line specify the total number of atoms to be calculated (integer)
On the second line specify the atomic numbers of the active atoms (with their 
numbering in the log/FChk file)


********************
 # FRAGMENTS section
********************
On first line  specify the total number of fragments to be calculated (integer)
Next line specify the number of atoms of the 1st fragment (integer) 
Next line specify the atomic numbers of the atoms of 1st fragment (with their 
numbering in the log/FChk file)
Repeat previous 2 lines for each of the fragments.
In the case of the last fragment, if -1 is entered in the first line the program 
assumes that all atoms that have not been assigned to the previous fragments are 
included in the last one. This is useful in the case of a single big fragment

********************
 # CUBE section
********************
MAX_OCC=n ! where n(integer) is the maximum allowed occupation of the eff-AO (in 
          ! milielectrons) to be included in the analysis 
MIN_OCC=m ! where m(integer) is the minimum required occupation of the eff-AO   
          ! (in milielectrons) to be included in the analysis
Default values are 1000 and 0, respectively. That is, cubes for all eff-AOs will 
be generated for all active atoms.
In both EFFAO and UEFFAO cases, n and m are assumed in the range [0,1000]

********************
 # DM section
********************
On the first line specify the full file name of the file containing the DM1
If necessary (DM=2 in METODE section), on the second line specify the full file 
name of the file containing the DM2. 
(Both DM1 and DM2 files are as provided by Eduard Matito's DMN code.) 

********************
 # QTAIM section
********************
The algorithm implemented is that of Rodriguez in JCC (10.1002/jcc.21134)
Some of the integration parameters are controlled by the following keywords 
(the default avaues are given)
STEP=300  NNA=0  MAXDIST=12  SCREENING=1000  PATH=0

********************
 # ENPART section
********************
It is important to note that the program will perform the decomposition of the 
total energy evaluated with the method as specified below, irrespective of the 
method the input's FChk file was generated with.

Including exact-exchange:
HF        ! Do Decomposition of the Hartree-Fock energy (HF of Gaussian)
LDA       ! Do Decomposition of the Hartree-Fock-Slater energy (HFS of Gaussian)
B3LYP     ! Do Decomposition of the B3LYP energy (B3LYP of Gaussian)
PBE0      ! Do Decomposition of the PBE0 energy (PBE1PBE of Gaussian)

Without exact exchange:
BLYP      ! Do Decomposition of the BLYP energy (BLYP of Gaussian)
PBE       ! Do Decomposition of the PBE energy (PBEPBE of Gaussian)

Additional options for testing purposes
B88       ! Do decomposition using B88 functional and no correlation part
B3ONLY    ! Do decomposition using B3LYP functional but no correlation part
LYP       ! Do decomposition using LYP functional and no exchange part

EXACT     ! Do "exact" energy decomposition using additional information on the 
          ! FChk file. It only makes sense if ENPART uses the same method as in 
	  ! the FChk file (it will tend to reproduce the Total energy in the 
	  ! FChk). The scheme asumes that the Kinteic, electron-nuclear and
	  ! total electron-eletron energies are included in the FChk, which are 
	  ! not by default. In order to include them you must i) perform the  
	  ! original Gaussian calculation with #p option, and ii) use the 
	  ! utility get_energy as
          !       $APOST/get_energy filename >> file.fchk
	  ! where filename refers to Gaussian's .log file and file.fchk is your 
	  ! input's FChk file. Note that with EXACT option on the program will 
	  ! reevaluate N_at number of integrals twice, so the ENPART calculation 
	  ! will be more time consuming.

THREBOD =n  ! where n is the threshold (in milielectrons) of the bond order (BO) 
            ! between any pairs of atom so that the local diatomic xc 
            ! contribution is explicitly computed.  When the BO is below that 
	    ! thresold, the assymptotic -BO/R_{AB} is used instead.


Accuracy of the numerical integrations:
----------------------------------------------
Default grid size for one-electron quantities is 110 x 434 radial and angular 
points per atom, with r0=0.1 (i.e., half of the radial integration points lie 
inside a sphere of radius 0.1 a.u.). These values can be changed using 
additional arguments when calling the program. For instance

$APOST/apost3d input 50 266 > output

will use 50x266 radial and angular points per atom in the calculation. 
For the radial part,  the number of points can be defined in the range of 1 to
500. For the angular part we use Lebedev-Laikov grids, with fixed number of grid 
points. Possible values are: 6 14 26 38 50 74 86 110 146 170 194 230 266 302 350 
434 590 770 974. Recomended and tested combinations are: 30 x 110, 40 x 146, 70 
x 434 and 110 x 434.
For electron population analyses such as bond orders, eff-AOs, local spin or EOS
analysis, a more modest grid of 40 x 146 (50 if atoms with Z~>30 are included) 
can be safely used for most puroposes.

When doing ENPART calculations the recommended grid for the one-electron part is 
the default. Errors in  Kinetic and electron-nuclear energies are usually below 
0.1 kcal/mol. For the genuine two-electron integrations (Coulomb and exact 
exchange), the default grid is 40 x 146.
The error of the two-electron integrations are less predictable, and may be up 
to tens of kcal/mol for very large systems. IT is not recommended to change
the default grid size for two-electron integrations. Use keyword EXACT to make
the accumulated error of the two-electron part essentially zero.

Utilities: 
----------
In folder $APOST/util a number of additional standalone utilities can be found.

get_energy  ! Usage $APOST/get_energy file.log >> file.fchk
            ! It extracts the kinetic, electron-nuclear and electron-electron
	    ! energy contributions from the Gaussian output file.log and appends
	    ! them to the fchk file. The keyword #p must have been included in
	    ! the previous Gaussian calculation.

group_frag  ! Usage $APOST/group_frag file
            ! It reads an existing apost3d output (file.tfvc) that included
	    ! ENPART, and perform a grouping of the bond orders and energy
	    ! components according to the *actual* fragment definition in
	    ! file file.inp.

gen_hirsh   ! Generates atomic reference densities for HIRSH/HIRSH-IT calculations

wfn2fchk    ! Transforms a WFN file into a FChk one. Basis set definition must
            ! be provided, too

Program limitations:
--------------------
Currently limits are set to max 3000 basis functions and 250 atoms
There is some room for increasing these limits by changing the values
of parameters nmax and maxat in file parameter.h
There is a machine limitation for the data size of the executable.
You can check it with the command
  size apost3d
The bss value (4th column) must can not exceed  4294967296 (4 Gb).

Unfortunately, not all possible combinations of atom-in-molecule definition and
analysis tool are implemented in the present version. The most relevant 
incompatibilites include:
i) MULLI/LOWDIN with ENPART

To do:
------
Some features do not work properly as yet, namely:
- Energy decomposition schemes 
